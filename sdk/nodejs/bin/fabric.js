"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
class Fabric extends pulumi.CustomResource {
    /**
     * Get an existing Fabric resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Fabric(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["description"] = state ? state.description : undefined;
            inputs["fabric"] = state ? state.fabric : undefined;
            inputs["gateway"] = state ? state.gateway : undefined;
            inputs["internetNat"] = state ? state.internetNat : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["provisionEndIp"] = state ? state.provisionEndIp : undefined;
            inputs["provisionStartIp"] = state ? state.provisionStartIp : undefined;
            inputs["public"] = state ? state.public : undefined;
            inputs["resolvers"] = state ? state.resolvers : undefined;
            inputs["routes"] = state ? state.routes : undefined;
            inputs["subnet"] = state ? state.subnet : undefined;
            inputs["vlanId"] = state ? state.vlanId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.provisionEndIp === undefined) {
                throw new Error("Missing required property 'provisionEndIp'");
            }
            if (!args || args.provisionStartIp === undefined) {
                throw new Error("Missing required property 'provisionStartIp'");
            }
            if (!args || args.subnet === undefined) {
                throw new Error("Missing required property 'subnet'");
            }
            if (!args || args.vlanId === undefined) {
                throw new Error("Missing required property 'vlanId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["gateway"] = args ? args.gateway : undefined;
            inputs["internetNat"] = args ? args.internetNat : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["provisionEndIp"] = args ? args.provisionEndIp : undefined;
            inputs["provisionStartIp"] = args ? args.provisionStartIp : undefined;
            inputs["resolvers"] = args ? args.resolvers : undefined;
            inputs["routes"] = args ? args.routes : undefined;
            inputs["subnet"] = args ? args.subnet : undefined;
            inputs["vlanId"] = args ? args.vlanId : undefined;
            inputs["fabric"] = undefined /*out*/;
            inputs["public"] = undefined /*out*/;
        }
        super("triton:index/fabric:Fabric", name, inputs, opts);
    }
}
exports.Fabric = Fabric;
//# sourceMappingURL=fabric.js.map