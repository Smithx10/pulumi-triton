# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class Key(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, key=None, name=None):
        """Create a Key resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not key:
            raise TypeError('Missing required property key')
        elif not isinstance(key, basestring):
            raise TypeError('Expected property key to be a basestring')
        __self__.key = key
        """
        Content of public key from disk in OpenSSH format
        """
        __props__['key'] = key

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Name of the key (generated from the key comment if not set)
        """
        __props__['name'] = name

        super(Key, __self__).__init__(
            'triton:index/key:Key',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'key' in outs:
            self.key = outs['key']
        if 'name' in outs:
            self.name = outs['name']
