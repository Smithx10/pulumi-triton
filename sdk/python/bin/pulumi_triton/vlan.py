# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class Vlan(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, description=None, name=None, vlan_id=None):
        """Create a Vlan resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        Description of the VLAN
        """
        __props__['description'] = description

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Unique name to identify VLAN
        """
        __props__['name'] = name

        if not vlan_id:
            raise TypeError('Missing required property vlan_id')
        elif not isinstance(vlan_id, int):
            raise TypeError('Expected property vlan_id to be a int')
        __self__.vlan_id = vlan_id
        """
        Number between 0-4095 indicating VLAN ID
        """
        __props__['vlanId'] = vlan_id

        super(Vlan, __self__).__init__(
            'triton:index/vlan:Vlan',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'description' in outs:
            self.description = outs['description']
        if 'name' in outs:
            self.name = outs['name']
        if 'vlanId' in outs:
            self.vlan_id = outs['vlanId']
